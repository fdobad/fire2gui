let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <Plug>(-fzf-complete-finish) l
inoremap <silent> <Plug>(fzf-maps-i) :call fzf#vim#maps('i', 0)
inoremap <expr> <Plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()
inoremap <expr> <Plug>(fzf-complete-line) fzf#vim#complete#line()
inoremap <expr> <Plug>(fzf-complete-file-ag) fzf#vim#complete#path('ag -l -g ""')
inoremap <expr> <Plug>(fzf-complete-file) fzf#vim#complete#path("find . -path '*/\.*' -prune -o -type f -print -o -type l -print | sed 's:^..::'")
inoremap <expr> <Plug>(fzf-complete-path) fzf#vim#complete#path("find . -path '*/\.*' -prune -o -print | sed '1d;s:^..::'")
inoremap <expr> <Plug>(fzf-complete-word) fzf#vim#complete#word()
nnoremap <silent>  :Files
tmap  "+p
nnoremap <silent>  w :SendCurrentLine
vnoremap <silent>  w :SendLineToREPL
nnoremap  r :REPLToggle
nnoremap  e :REPLHide
nnoremap  s :REPLSendSession
nnoremap  d :REPLSendRHSofCurrentLine
nnoremap <silent>  ' :Marks
nnoremap <silent>  / :BLines
nnoremap <silent>  f :Rg
nnoremap <silent>  b :Buffers
nnoremap <silent> <expr>  g (&hls && v:hlsearch ? ':nohls' : ':set hls')."\n"
nnoremap  h :bprevious 
nnoremap  l :bnext
vmap gx <Plug>NetrwBrowseXVis
nmap gx <Plug>NetrwBrowseX
tnoremap <F2> N
nnoremap <F12> :REPLDebugStopAtCurrentLine
nnoremap <F10> :REPLPDBN
nnoremap <F11> :REPLPDBS
nnoremap <Plug>(-fzf-vim-do) :execute g:__fzf_command
nnoremap <Plug>(-fzf-/) /
nnoremap <Plug>(-fzf-:) :
nnoremap <silent> <Plug>(-fzf-complete-finish) a
tmap <C-P> "+p
onoremap <silent> <Plug>(fzf-maps-o) :call fzf#vim#maps('o', 0)
xnoremap <silent> <Plug>(fzf-maps-x) :call fzf#vim#maps('x', 0)
nnoremap <silent> <Plug>(fzf-maps-n) :call fzf#vim#maps('n', 0)
vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))
map <F4> :execute "noautocmd vimgrep /" . expand("<cword>") . "/j **" | cw
nnoremap <silent> <C-F> :Files
nmap <F8> :TagbarToggle
let &cpo=s:cpo_save
unlet s:cpo_save
set backspace=indent,eol,start
set fileencodings=ucs-bom,utf-8,default,latin1
set helplang=en
set hidden
set hlsearch
set nomodeline
set mouse=a
set printoptions=paper:a4
set ruler
set runtimepath=~/.vim,~/.vim/pack/plugin/opt/vim-repl,~/.vim/pack/plugin/start/vim-fugitive,~/.vim/pack/plugin/start/tagbar,~/.vim/pack/plugin/start/fzf,/var/lib/vim/addons,/etc/vim,/usr/share/vim/vimfiles,/usr/share/vim/vim82,/usr/share/vim/vimfiles/after,/etc/vim/after,/var/lib/vim/addons/after,~/.vim/after
set scrolloff=3
set smarttab
set splitbelow
set splitright
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set undodir=~/.vim/undo
set undofile
set wildignore=*.pyc
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/dev/fire2am/extras
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd ~/dev/fire2am/fire2am_argparse.py
$argadd ~/dev/fire2am/fire2am_dialog.py
$argadd ~/dev/fire2am/fire2am.py
$argadd ~/dev/fire2am/fire2am_utils.py
$argadd ~/dev/fire2am/__init__.py
$argadd ~/dev/fire2am/ParseInputs.py
edit allProcessingAlgorithms.txt
set splitbelow splitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
if bufexists("allProcessingAlgorithms.txt") | buffer allProcessingAlgorithms.txt | else | edit allProcessingAlgorithms.txt | endif
balt ~/dev/fire2am/fire2am.py
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=fb:-,fb:*,n:>
setlocal commentstring=
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal cursorlineopt=both
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'text'
setlocal filetype=text
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
set relativenumber
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal scrolloff=-1
setlocal shiftwidth=8
setlocal noshortname
setlocal showbreak=
setlocal sidescrolloff=-1
setlocal signcolumn=auto
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal spelloptions=
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'text'
setlocal syntax=text
endif
setlocal tabstop=8
setlocal tagcase=
setlocal tagfunc=
setlocal tags=
setlocal termwinkey=
setlocal termwinscroll=10000
setlocal termwinsize=
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal undolevels=-123456
setlocal varsofttabstop=
setlocal vartabstop=
setlocal wincolor=
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 934 - ((22 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 934
normal! 0
tabnext 1
badd +0 ~/dev/fire2am/fire2am_argparse.py
badd +0 ~/dev/fire2am/fire2am_dialog.py
badd +368 ~/dev/fire2am/fire2am.py
badd +0 ~/dev/fire2am/fire2am_utils.py
badd +0 ~/dev/fire2am/__init__.py
badd +0 ~/dev/fire2am/ParseInputs.py
badd +34 ~/source/fire2gui/qgis/README.md
badd +26 ~/source/fire2gui/ignitions/ignitionsPoints2csv.py
badd +10 ~/source/fire2gui/qgis/tmp/shitsheet.py
badd +4 ~/source/C2FSB/main.py
badd +209 ~/source/C2FSB/Cell2Fire/DataGeneratorC.py
badd +136 ~/source/C2FSB/Cell2FireC/Cell2Fire.cpp
badd +1 ~/source/fire2gui/fuels/spain_lookup_table.csv
badd +1 ~/source/fire2gui/fuels/fuels.py
badd +843 ~/source/C2FSB/Cell2Fire/Stats.py
badd +322 ~/source/C2FSB/Cell2Fire/ReadDataPrometheus.py
badd +57 ~/source/fire2gui/elevation/README.py
badd +1 ~/source/fire2gui/fuels/elevation.asc
badd +3 ~/dev/fire2am/userFolder/fuels.asc
badd +12 ~/source/fire2gui/qgis/standalone/standalone-qgis3.py
badd +934 allProcessingAlgorithms.txt
badd +19 ~/.vim/cheatsheet.md
badd +50 ~/dev/fire2am/userFolder/likeQgisConsole.py
badd +3 ~/dev/fire2am/requirements.dev
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOS
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
